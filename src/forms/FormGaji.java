/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utils.DatabaseConnection;

/**
 *
 * @author Putra
 */
public class FormGaji extends javax.swing.JFrame {

    /**
     * Creates new form FormGaji
     */
    public FormGaji() {
        initComponents();
        isiComboBoxKaryawan(); // Muat data karyawan ke ComboBox
        tampilkanData();       // Muat data transaksi gaji ke tabel
    }
    
    private void tampilkanData() {
    try {
        Connection conn = DatabaseConnection.getConnection();
        String sql = "SELECT g.id_gaji, p.nama, g.tanggal_pembayaran, g.jumlah " +
                     "FROM gaji g JOIN pegawai p ON g.id_pegawai = p.id_pegawai";
        PreparedStatement pst = conn.prepareStatement(sql);
        ResultSet rs = pst.executeQuery();

        DefaultTableModel model = (DefaultTableModel) gajiTable.getModel();
        model.setRowCount(0); // Reset tabel sebelum memuat data baru
        while (rs.next()) {
            Object[] row = {
                rs.getInt("id_gaji"),
                rs.getString("nama"),
                rs.getDate("tanggal_pembayaran"),
                rs.getInt("jumlah")
            };
            model.addRow(row);
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal memuat data gaji: " + e.getMessage());
    }
}
    
   private void isiComboBoxKaryawan() {
    try {
        Connection conn = DatabaseConnection.getConnection();
        String sql = "SELECT id_pegawai, nama FROM pegawai";
        PreparedStatement pst = conn.prepareStatement(sql);
        ResultSet rs = pst.executeQuery();

        karyawanComboBox.removeAllItems(); // Reset ComboBox sebelum memuat data baru
        while (rs.next()) {
            // Tambahkan format "id - nama" ke ComboBox
            karyawanComboBox.addItem(rs.getInt("id_pegawai") + " - " + rs.getString("nama"));
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal memuat data karyawan: " + e.getMessage());
    }
}




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        karyawanComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        tanggalPembayaranChooser = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jumlahGajiTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        gajiTable = new javax.swing.JTable();
        tambahButton = new javax.swing.JButton();
        ubahButton = new javax.swing.JButton();
        hapusButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        kembaliButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Data Gaji", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 36))); // NOI18N

        jLabel1.setText("Karyawan");

        karyawanComboBox.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Tanggal Pembayaran");

        jLabel3.setText("Jumlah Gaji");

        jumlahGajiTextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        gajiTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Gaji", "Nama Karyawan", "Tanggal Pembayaran", "Jumlah Gaji"
            }
        ));
        gajiTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gajiTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gajiTable);

        tambahButton.setText("Tambah");
        tambahButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tambahButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahButtonActionPerformed(evt);
            }
        });

        ubahButton.setText("Ubah");
        ubahButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ubahButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahButtonActionPerformed(evt);
            }
        });

        hapusButton.setText("Hapus");
        hapusButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        kembaliButton.setText("Kembali");
        kembaliButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        kembaliButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(kembaliButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(karyawanComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jumlahGajiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tanggalPembayaranChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(tambahButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(hapusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ubahButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(kembaliButton)
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(karyawanComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(tanggalPembayaranChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jumlahGajiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tambahButton)
                    .addComponent(resetButton)
                    .addComponent(hapusButton)
                    .addComponent(ubahButton))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tambahButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahButtonActionPerformed
       try {
        Connection conn = DatabaseConnection.getConnection();
        String sql = "INSERT INTO gaji (id_pegawai, tanggal_pembayaran, jumlah) VALUES (?, ?, ?)";
        PreparedStatement pst = conn.prepareStatement(sql);

        int idPegawai = Integer.parseInt(karyawanComboBox.getSelectedItem().toString().split(" - ")[0]);
        pst.setInt(1, idPegawai);
        java.util.Date tanggal = tanggalPembayaranChooser.getDate();
        pst.setDate(2, new java.sql.Date(tanggal.getTime()));
        pst.setInt(3, Integer.parseInt(jumlahGajiTextField.getText()));

        pst.executeUpdate();
        JOptionPane.showMessageDialog(this, "Data gaji berhasil ditambahkan!");
        tampilkanData(); // Perbarui tabel setelah menambah data
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_tambahButtonActionPerformed

    private void ubahButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahButtonActionPerformed
        try {
        int selectedRow = gajiTable.getSelectedRow();
        if (selectedRow != -1) {
            Connection conn = DatabaseConnection.getConnection();
            String sql = "UPDATE gaji SET id_pegawai = ?, tanggal_pembayaran = ?, jumlah = ? WHERE id_gaji = ?";
            PreparedStatement pst = conn.prepareStatement(sql);

            int idPegawai = Integer.parseInt(karyawanComboBox.getSelectedItem().toString().split(" - ")[0]);
            pst.setInt(1, idPegawai);
            java.util.Date tanggal = tanggalPembayaranChooser.getDate();
            pst.setDate(2, new java.sql.Date(tanggal.getTime()));
            pst.setInt(3, Integer.parseInt(jumlahGajiTextField.getText()));
            int idGaji = Integer.parseInt(gajiTable.getValueAt(selectedRow, 0).toString());
            pst.setInt(4, idGaji);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data gaji berhasil diubah!");
            tampilkanData(); // Perbarui tabel
        } else {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin diubah.");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_ubahButtonActionPerformed

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        try {
        int selectedRow = gajiTable.getSelectedRow();
        if (selectedRow != -1) {
            Connection conn = DatabaseConnection.getConnection();
            String sql = "DELETE FROM gaji WHERE id_gaji = ?";
            PreparedStatement pst = conn.prepareStatement(sql);

            int idGaji = Integer.parseInt(gajiTable.getValueAt(selectedRow, 0).toString());
            pst.setInt(1, idGaji);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data gaji berhasil dihapus!");
            tampilkanData(); // Perbarui tabel
        } else {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus.");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_hapusButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
       karyawanComboBox.setSelectedIndex(0);
    tanggalPembayaranChooser.setDate(null);
    jumlahGajiTextField.setText("");
    gajiTable.clearSelection();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void gajiTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gajiTableMouseClicked
       int selectedRow = gajiTable.getSelectedRow(); // Ambil baris yang diklik
    if (selectedRow != -1) {
        try {
            // Ambil nama karyawan dari tabel
            String namaKaryawan = gajiTable.getValueAt(selectedRow, 1).toString();

            // Cocokkan nama di ComboBox
            for (int i = 0; i < karyawanComboBox.getItemCount(); i++) {
                String item = karyawanComboBox.getItemAt(i).toString();
                if (item.contains(namaKaryawan)) { // Jika cocok, pilih item tersebut
                    karyawanComboBox.setSelectedIndex(i);
                    break;
                }
            }

            // Tampilkan data lain ke input form
            java.util.Date tanggalPembayaran = (java.util.Date) gajiTable.getValueAt(selectedRow, 2);
            String jumlahGaji = gajiTable.getValueAt(selectedRow, 3).toString();

            tanggalPembayaranChooser.setDate(tanggalPembayaran); // Set tanggal di JDateChooser
            jumlahGajiTextField.setText(jumlahGaji); // Set jumlah gaji di TextField

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error saat mengambil data dari tabel: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_gajiTableMouseClicked

    private void kembaliButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliButtonActionPerformed
        this.dispose(); // Menutup PelangganForm
    MainMenuForm mainMenuForm = MainMenuForm.getInstance(); // Gunakan instance MainMenu yang sudah ada
    mainMenuForm.setVisible(true); // Tampilkan MainMenu 
    }//GEN-LAST:event_kembaliButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormGaji.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormGaji.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormGaji.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormGaji.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormGaji().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable gajiTable;
    private javax.swing.JButton hapusButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jumlahGajiTextField;
    private javax.swing.JComboBox<String> karyawanComboBox;
    private javax.swing.JButton kembaliButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton tambahButton;
    private com.toedter.calendar.JDateChooser tanggalPembayaranChooser;
    private javax.swing.JButton ubahButton;
    // End of variables declaration//GEN-END:variables
}
