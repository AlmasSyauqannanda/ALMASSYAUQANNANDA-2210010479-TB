/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utils.DatabaseConnection;

/**
 *
 * @author Putra
 */
public class FormPegawai extends javax.swing.JFrame {

    
    
    public FormPegawai() {
    initComponents();         // Inisialisasi komponen GUI
    isiComboBoxJabatan();     // Muat data saat form dibuka
    tampilkanData();          // Muat data pegawai ke tabel
        
        kembaliButton = new javax.swing.JButton();
        kembaliButton.setText("Kembali");
        kembaliButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliButtonActionPerformed(evt);
            }
        });
    }
    
    private void tampilkanData() {
    try {
        // Koneksi ke database
        Connection conn = DatabaseConnection.getConnection();
        String sql = "SELECT p.id_pegawai, p.nama, p.alamat, p.tanggal_lahir, j.nama_jabatan " +
                     "FROM pegawai p JOIN jabatan j ON p.id_jabatan = j.id_jabatan";
        PreparedStatement pst = conn.prepareStatement(sql);
        ResultSet rs = pst.executeQuery();

        // Model untuk tabel
        DefaultTableModel model = (DefaultTableModel) pegawaiTable.getModel();
        model.setRowCount(0); // Reset data tabel sebelum memuat yang baru

        // Loop untuk menambahkan data ke tabel
        while (rs.next()) {
            Object[] row = {
                rs.getInt("id_pegawai"),
                rs.getString("nama"),
                rs.getString("alamat"),
                rs.getDate("tanggal_lahir"),
                rs.getString("nama_jabatan")
            };
            model.addRow(row);
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal memuat data pegawai: " + e.getMessage());
    }
}

    
   private void isiComboBoxJabatan() {
    try {
        Connection conn = DatabaseConnection.getConnection();
        String sql = "SELECT id_jabatan, nama_jabatan FROM jabatan";
        PreparedStatement pst = conn.prepareStatement(sql);
        ResultSet rs = pst.executeQuery();

        jabatanComboBox.removeAllItems(); // Reset ComboBox sebelum mengisi
        while (rs.next()) {
            // Tambahkan item ke ComboBox dalam format "id - nama_jabatan"
            jabatanComboBox.addItem(rs.getInt("id_jabatan") + " - " + rs.getString("nama_jabatan"));
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal memuat data jabatan: " + e.getMessage());
    }
}





    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        namaPegawaiTextField = new javax.swing.JTextField();
        alamatTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jabatanComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        pegawaiTable = new javax.swing.JTable();
        tambahButton = new javax.swing.JButton();
        ubahButton = new javax.swing.JButton();
        hapusButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        tanggalLahirChooser = new com.toedter.calendar.JDateChooser();
        kembaliButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Data Pegawai", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 36))); // NOI18N

        jLabel1.setText("Nama Pegawai");

        jLabel2.setText("Alamat");

        jLabel3.setText("Tanggal Lahir");

        jLabel4.setText("Jabatan");

        pegawaiTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pegawaiTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Pegawai", "Nama", "Alamat", "Tanggal Lahir", "Jabatan"
            }
        ));
        pegawaiTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pegawaiTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(pegawaiTable);

        tambahButton.setText("Tambah");
        tambahButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tambahButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahButtonActionPerformed(evt);
            }
        });

        ubahButton.setText("Ubah");
        ubahButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ubahButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahButtonActionPerformed(evt);
            }
        });

        hapusButton.setText("Hapus");
        hapusButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        kembaliButton.setText("Kembali");
        kembaliButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        kembaliButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(138, 138, 138)
                                .addComponent(ubahButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hapusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tambahButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(88, 88, 88)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(namaPegawaiTextField)
                                    .addComponent(alamatTextField)
                                    .addComponent(jabatanComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tanggalLahirChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))))
                        .addGap(0, 83, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(kembaliButton)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(kembaliButton)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(namaPegawaiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(alamatTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(tanggalLahirChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jabatanComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tambahButton)
                    .addComponent(hapusButton)
                    .addComponent(ubahButton)
                    .addComponent(resetButton))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tambahButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahButtonActionPerformed
      try {
        Connection conn = DatabaseConnection.getConnection();
        String sql = "INSERT INTO pegawai (nama, alamat, tanggal_lahir, id_jabatan) VALUES (?, ?, ?, ?)";
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, namaPegawaiTextField.getText());
        pst.setString(2, alamatTextField.getText());
        java.util.Date tanggal = tanggalLahirChooser.getDate();
        pst.setDate(3, new java.sql.Date(tanggal.getTime()));
        int idJabatan = Integer.parseInt(jabatanComboBox.getSelectedItem().toString().split(" - ")[0]);
        pst.setInt(4, idJabatan);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan!");
        tampilkanData(); // Perbarui tabel setelah data ditambahkan
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_tambahButtonActionPerformed

    private void ubahButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahButtonActionPerformed
        try {
        Connection conn = DatabaseConnection.getConnection();
        int selectedRow = pegawaiTable.getSelectedRow();
        if (selectedRow != -1) {
            String idPegawai = pegawaiTable.getValueAt(selectedRow, 0).toString();
            String sql = "UPDATE pegawai SET nama = ?, alamat = ?, tanggal_lahir = ?, id_jabatan = ? WHERE id_pegawai = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, namaPegawaiTextField.getText());
            pst.setString(2, alamatTextField.getText());
            java.util.Date tanggal = tanggalLahirChooser.getDate();
            pst.setDate(3, new java.sql.Date(tanggal.getTime()));
            int idJabatan = Integer.parseInt(jabatanComboBox.getSelectedItem().toString().split(" - ")[0]);
            pst.setInt(4, idJabatan);
            pst.setInt(5, Integer.parseInt(idPegawai));
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data berhasil diubah!");
            tampilkanData();
        } else {
            JOptionPane.showMessageDialog(this, "Pilih baris data yang ingin diubah.");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_ubahButtonActionPerformed

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        try {
        Connection conn = DatabaseConnection.getConnection();
        int selectedRow = pegawaiTable.getSelectedRow();
        if (selectedRow != -1) {
            String idPegawai = pegawaiTable.getValueAt(selectedRow, 0).toString();
            String sql = "DELETE FROM pegawai WHERE id_pegawai = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setInt(1, Integer.parseInt(idPegawai));
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");
            tampilkanData();
        } else {
            JOptionPane.showMessageDialog(this, "Pilih baris data yang ingin dihapus.");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_hapusButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
      namaPegawaiTextField.setText("");
    alamatTextField.setText("");
    tanggalLahirChooser.setDate(null); // Reset JDateChooser
    jabatanComboBox.setSelectedIndex(0);
    pegawaiTable.clearSelection();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void pegawaiTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pegawaiTableMouseClicked
       int selectedRow = pegawaiTable.getSelectedRow();
    if (selectedRow != -1) {
        // Ambil data dari tabel
        namaPegawaiTextField.setText(pegawaiTable.getValueAt(selectedRow, 1).toString());
        alamatTextField.setText(pegawaiTable.getValueAt(selectedRow, 2).toString());
        java.util.Date tanggal = (java.util.Date) pegawaiTable.getValueAt(selectedRow, 3);
        tanggalLahirChooser.setDate(tanggal);

        // Ambil nama jabatan dari tabel
        String namaJabatan = pegawaiTable.getValueAt(selectedRow, 4).toString();

        // Setel item pada jabatanComboBox yang sesuai
        for (int i = 0; i < jabatanComboBox.getItemCount(); i++) {
            String item = jabatanComboBox.getItemAt(i);
            if (item.contains(namaJabatan)) { // Cocokkan berdasarkan nama jabatan
                jabatanComboBox.setSelectedIndex(i);
                break;
            }
        }
    }
    }//GEN-LAST:event_pegawaiTableMouseClicked

    private void kembaliButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliButtonActionPerformed
        this.dispose(); // Menutup PelangganForm
    MainMenuForm mainMenuForm = MainMenuForm.getInstance(); // Gunakan instance MainMenu yang sudah ada
    mainMenuForm.setVisible(true); // Tampilkan MainMenu  
    }//GEN-LAST:event_kembaliButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormPegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormPegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormPegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormPegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormPegawai().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alamatTextField;
    private javax.swing.JButton hapusButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jabatanComboBox;
    private javax.swing.JButton kembaliButton;
    private javax.swing.JTextField namaPegawaiTextField;
    private javax.swing.JTable pegawaiTable;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton tambahButton;
    private com.toedter.calendar.JDateChooser tanggalLahirChooser;
    private javax.swing.JButton ubahButton;
    // End of variables declaration//GEN-END:variables
}
